<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sd.mommyson.manager.dao.ManagerDAO">

	<resultMap id="memberResultMap" type="com.sd.mommyson.member.dto.MemberDTO">
		<id property="memCode" column="MEM_CODE"/>
		<result property="email" column="EMAIL"/>
		<result property="memPwd" column="MEM_PWD"/>
		<result property="address" column="ADDRESS"/>
		<result property="postCode" column="POST_CODE"/>
		<result property="dAddress" column="D_ADDRESS"/>
		<result property="phone" column="PHONE"/>
		<result property="memType" column="MEM_TYPE"/>
		<result property="locationCode" column="LOCATION_CODE"/>
		<result property="nickname" column="NICKNAME"/>
		<result property="memId" column="MEM_ID"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="isDeleted" column="IS_DELETED"/>
		<association property="user" resultMap="userResultMap"/>
		<association property="ceo" resultMap="ceoResultMap"/>
		<association property="manager" resultMap="managerResultMap"/>
		
	</resultMap>
	
	<resultMap type="com.sd.mommyson.member.dto.ManagerDTO" id="managerResultMap">
		<id property="memCode" column="MEM_CODE"/>
		<result property="lastLogin" column="LAST_LOGIN"/>
		<association property="authDTO" resultMap="authResultMap"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.member.dto.CeoDTO" id="ceoResultMap">
		<id property="memCode" column="MEM_CODE"/>
		<result property="account" column="ACCOUNT"/>
		<result property="no" column="STORE_NO"/>
		<result property="name" column="CEO_NAME"/>
		<association property="store" resultMap="storeResultMap"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.member.dto.StoreDTO" id="storeResultMap">
		<id property="memCode" column="MEM_CODE"/>
		<result property="storeName" column="STORE_NAME"/>
		<result property="storeImg" column="STORE_IMG"/>
		<result property="storeInfo" column="STORE_INFO"/>
		<result property="grade" column="GRADE"/>
		<result property="delCost" column="DEL_COST"/>
		<result property="workTime" column="WORK_TIME"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.member.dto.AuthDTO" id="authResultMap">
		<id property="code" column="CODE"/>
		<result property="auth" column="AUTH"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.member.dto.UserDTO" id="userResultMap">
		<id property="memCode" column="MEM_CODE"/>
		<result property="name" column="NAME"/>
		<result property="repCount" column="REP_COUNT"/>
	</resultMap>
	
	<select id="selectNormalMemberTotalCount" resultType="_int">
	    SELECT
   	  	  COUNT(*)
   	  	 FROM MEMBER_TBL A
   	  	 <where>
	   	  	<if test="memberTypeUser">
		      	A.MEM_TYPE = 'user'
		    </if>
		    <if test="memberTypeCeo">
		    	A.MEM_TYPE = 'ceo'
		    </if>
   	  	 	<if test="searchValue != null">
   	  	 		A.NICKNAME LIKE '%' ||  #{ searchValue } || '%'
   	  	 	</if>
   	  	 </where>
	</select>
	
	<select id="selectMember" resultMap="memberResultMap">
		SELECT
		        C.MEM_CODE
			  , C.EMAIL
			  , C.ADDRESS
			  , C.POST_CODE
			  , C.D_ADDRESS
			  , C.PHONE
			  , C.MEM_TYPE
			  , C.LOCATION_CODE
			  , C.NICKNAME
			  , C.MEM_ID
			  , C.ENROLL_DATE
			  , C.IS_DELETED
			  , C.NAME
			  , C.REP_COUNT
			  , C.ACCOUNT
			  , C.STORE_NO
			  , C.CEO_NAME
			  , C.STORE_NAME
			  , C.STORE_IMG
			  , C.STORE_INFO
			  , C.GRADE
			  , C.DEL_COST
			  , C.WORK_TIME
		   FROM (SELECT 
		                ROWNUM RNUM
					  , B.MEM_CODE
					  , B.EMAIL
					  , B.ADDRESS
					  , B.POST_CODE
					  , B.D_ADDRESS
					  , B.PHONE
					  , B.MEM_TYPE
					  , B.LOCATION_CODE
					  , B.NICKNAME
					  , B.MEM_ID
					  , B.ENROLL_DATE
					  , B.IS_DELETED
					  , B.NAME
					  , B.REP_COUNT
					  , B.ACCOUNT
					  , B.STORE_NO
					  , B.CEO_NAME
					  , B.STORE_NAME
					  , B.STORE_IMG
					  , B.STORE_INFO
					  , B.GRADE
					  , B.DEL_COST
					  , B.WORK_TIME
				   FROM (SELECT 
							   A.MEM_CODE
							 , A.EMAIL
							 , A.ADDRESS
							 , A.POST_CODE
							 , A.D_ADDRESS
							 , A.PHONE
							 , A.MEM_TYPE
							 , A.LOCATION_CODE
							 , A.NICKNAME
							 , A.MEM_ID
							 , A.ENROLL_DATE
							 , A.IS_DELETED
							 , U.NAME
							 , U.REP_COUNT
						     , F.ACCOUNT
							 , F.STORE_NO
							 , F.CEO_NAME
							 , D.STORE_NAME
							 , D.STORE_IMG
							 , D.STORE_INFO
							 , D.GRADE
							 , D.DEL_COST
							 , D.WORK_TIME
						  FROM MEMBER_TBL A
						  LEFT JOIN USER_TBL U ON (A.MEM_CODE = U.MEM_CODE)
						  LEFT JOIN CEO_TBL F ON (A.MEM_CODE = F.MEM_CODE)
						  LEFT JOIN STORE_TBL D ON (A.MEM_CODE = D.MEM_CODE)
						  <where>
						  	A.IS_DELETED = 'N' AND
						  	<if test='searchCondition == "user"'>
						  		A.MEM_TYPE = 'user'
						  	</if>
						  	<if test='searchCondition == "ceo"'>
						  		A.MEM_TYPE = 'ceo'
						  	</if>
						  </where>
						 ORDER BY A.ENROLL_DATE DESC)B
				 <![CDATA[        
		          WHERE ROWNUM <= #{ endRow }
		          ]]>)C
	      <![CDATA[
		  WHERE C.RNUM >= #{ startRow } 
	       ]]>
	</select>

	<resultMap type="com.sd.mommyson.member.dto.LocationDTO" id="locationResultMap" extends="memberResultMap">
		<id property="locationCode" column="LOCATION_CODE"/>
		<result property="locationName" column="LOCATION_NAME"/>
	</resultMap>
	
	<select id="blackMemberSelect" resultMap="memberResultMap">
	    SELECT 
			   A.MEM_CODE
			 , A.EMAIL
			 , A.ADDRESS
			 , A.POST_CODE
			 , A.D_ADDRESS
			 , A.PHONE
			 , A.MEM_TYPE
			 , A.LOCATION_CODE
			 , A.NICKNAME
			 , A.MEM_ID
			 , A.ENROLL_DATE
			 , A.IS_DELETED
		  FROM MEMBER_TBL A
		  LEFT JOIN USER_TBL B ON (A.MEM_CODE = B.MEM_CODE)
		  LEFT JOIN CEO_TBL C ON (A.MEM_CODE = C.MEM_CODE)
		  LEFT JOIN STORE_TBL D ON (A.MEM_CODE = D.MEM_CODE)
		 WHERE A.IS_DELETED = 'B'
	</select>
	
	<update id="deleteMembers" parameterType="list">
	    UPDATE
	           MEMBER_TBL A
	       SET A.IS_DELETED = 'Y'
	     <where>
	     	A.MEM_CODE IN
	     	<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
	     		#{ item }
	     	</foreach>
	     </where>
	</update>
	
	<update id="memberAddBlack" parameterType="list">
		UPDATE
		       MEMBER_TBL A
		   SET A.IS_DELETED = 'B'
		 <where>
	     	A.MEM_CODE IN
	     	<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
	     		#{ item }
	     	</foreach>
	   	 </where>
	</update>
	
	<select id="selectAuth" resultMap="authResultMap">
		SELECT
			   A.CODE
			 , A.AUTH
		  FROM AUTH_TBL A
		 WHERE A.CODE != 6
	</select>
	
	<update id="updateAuth" parameterType="hashmap">
		UPDATE MANAGER_TBL
		   SET CODE = #{ selected }
		 WHERE MEM_CODE = #{ memCode }
	</update>
	
	<insert id="insertNewManager" parameterType="hashmap">
		INSERT ALL
		INTO MEMBER_TBL VALUES(SEQ_MEMBER.nextval, NULL, #{ member.memPwd }, NULL, NULL, NULL, NULL, 'manager', 'L0', '관리자', #{ member.memId }, SYSDATE, 'N')
		INTO MANAGER_TBL VALUES(SEQ_MEMBER.currval, NULL, #{ code })
		SELECT * FROM DUAL
	</insert>
	
	<select id="selectManagerByMemCode" resultType="hashmap">
		SELECT
			   A.MEM_CODE
			 , A.MEM_ID
			 , B.CODE
		  FROM MEMBER_TBL A
		  JOIN MANAGER_TBL B ON(A.MEM_CODE = B.MEM_CODE)
		 WHERE A.MEM_CODE = #{ memCode }
	</select>
	
	<update id="deleteManager" parameterType="list">
		UPDATE MEMBER_TBL
		   SET IS_DELETED = 'Y'
		 WHERE MEM_CODE IN
		 <foreach collection="list" item="memCode" separator="," open="(" close=")">
		 	#{ memCode }
		 </foreach>
	</update>
   
   <resultMap id="PostResultMap" type="com.sd.mommyson.manager.dto.PostDTO" >
 	  <id property="postNo" column="POST_NO"/>
   	  <result property="boardCode" column="BOARD_CODE"/>
   	  <result property="postTitle" column="POST_TITLE"/>
   	  <result property="memCode" column="MEM_CODE"/>
   	  <result property="postContent" column="POST_CONTENT"/>
   	  <result property="postDate" column="POST_DATE"/>
   	  <result property="ansStatus" column="ANS_STATUS"/>
   	  <result property="queNo" column="QUE_NO"/>
   	  <result property="status" column="STATUS"/>
   	  <result property="viewCnt" column="VIEW_CNT"/>
   </resultMap>

  
   <!-- 공지사항 게시글 수 조회 -->
   <select id="selectNoticeTotalCount" resultType="_int">
   	  SELECT
   	  	  COUNT(*)
   	  	 FROM POST_TBL A
   	  	<where>
   	  	  A.STATUS = 'N'
   	  	  <if test='searchValue != null'>
   	  	  AND A.POST_TITLE LIKE '%' ||  #{ searchValue } || '%'
   	  	  </if>
   	  	  <if test="searchCondition == 'all' || searchCondition == null">
   	  	  AND A.BOARD_CODE IN('1','2','3','4','5')
   	  	  </if>
   	  	  <if test="searchCondition == 'notice'">
   	  	  AND A.BOARD_CODE = '1'
   	  	  </if>
   	  	  <if test="searchCondition == 'guide'">
   	  	  AND A.BOARD_CODE = '2'
   	  	  </if>
   	  	  <if test="searchCondition == 'check'">
   	  	  AND A.BOARD_CODE = '3'
   	  	  </if>
   	  	  <if test="searchCondition == 'event'">
   	  	  AND A.BOARD_CODE = '4'
   	  	  </if>
   	  	  <if test="searchCondition == 'owner'">
   	  	  AND A.BOARD_CODE = '5'
   	  	  </if>
   	  	</where>
   </select>
 
   <!-- 공지사항 리스트 조회  -->
   <select id="selectNoticeList" resultMap="PostResultMap">
	   SELECT
	    C.RNUM
	   ,C.POST_NO
	   ,C.BOARD_CODE
	   ,C.POST_TITLE
	   ,C.MEM_CODE
	   ,C.POST_CONTENT
	   ,C.POST_DATE
	   ,C.ANS_STATUS
	   ,C.QUE_NO
	   ,C.STATUS
	   ,C.VIEW_CNT
	   FROM (SELECT
	            ROWNUM RNUM
	           ,B.POST_NO
	           ,B.BOARD_CODE
	           ,B.POST_TITLE
	           ,B.MEM_CODE
	           ,B.POST_CONTENT
	           ,B.POST_DATE
	           ,B.ANS_STATUS
	           ,B.QUE_NO
	           ,B.STATUS
	           ,B.VIEW_CNT
	         FROM (SELECT
	                    A.POST_NO
	                   ,A.BOARD_CODE
	                   ,A.POST_TITLE
	                   ,A.MEM_CODE
	                   ,A.POST_CONTENT
	                   ,A.POST_DATE
	                   ,A.ANS_STATUS
	                   ,A.QUE_NO
	                   ,A.STATUS
	                   ,A.VIEW_CNT
	                   FROM POST_TBL A
	                  <where>
	                  A.STATUS = 'N'
			   	  	  <if test='searchValue != null'>
			   	  	   AND A.POST_TITLE LIKE '%' ||  #{ searchValue } || '%'
			   	  	  </if>
			   	  	  <if test="searchCondition == 'all' || searchCondition == null">
			   	  	   AND A.BOARD_CODE IN('1','2','3','4','5')
			   	  	  </if>
			   	  	  <if test="searchCondition == 'notice'">
			   	  	   AND A.BOARD_CODE = '1'
			   	  	  </if>
			   	  	  <if test="searchCondition == 'guide'">
			   	  	   AND A.BOARD_CODE = '2'
			   	  	  </if>
			   	  	  <if test="searchCondition == 'check'">
			   	  	   AND A.BOARD_CODE = '3'
			   	  	  </if>
			   	  	  <if test="searchCondition == 'event'">
			   	  	   AND A.BOARD_CODE = '4'
			   	  	  </if>
			   	  	  <if test="searchCondition == 'owner'">
			   	  	   AND A.BOARD_CODE = '5'
			   	  	  </if>
			   	  	  </where>
	                  ORDER BY A.POST_DATE DESC)B
	          <![CDATA[        
	          WHERE ROWNUM <= #{ endRow }
	          ]]>)C
	   <![CDATA[
	  WHERE C.RNUM >= #{ startRow } 
       ]]>
   </select>
   
   <select id="idDupCheck" parameterType="string" resultType="int">
       SELECT 
       		  COUNT(*) 
       	 FROM MEMBER_TBL 
       	WHERE MEM_ID = #{ memId }
       	  AND IS_DELETED = 'N'
       	  AND MEM_TYPE = 'manager'
   </select>
</mapper>