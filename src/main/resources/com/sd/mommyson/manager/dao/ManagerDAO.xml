<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sd.mommyson.manager.dao.ManagerDAO">

	<resultMap id="memberResultMap" type="com.sd.mommyson.member.dto.MemberDTO">
		<id property="memCode" column="MEM_CODE"/>
		<result property="email" column="EMAIL"/>
		<result property="memPwd" column="MEM_PWD"/>
		<result property="address" column="ADDRESS"/>
		<result property="postCode" column="POST_CODE"/>
		<result property="dAddress" column="D_ADDRESS"/>
		<result property="phone" column="PHONE"/>
		<result property="memType" column="MEM_TYPE"/>
		<result property="locationCode" column="LOCATION_CODE"/>
		<result property="nickname" column="NICKNAME"/>
		<result property="memId" column="MEM_ID"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="isDeleted" column="IS_DELETED"/>
		<association property="user" resultMap="userResultMap"/>
	</resultMap>
	
	<resultMap id="memberResultMap2" type="com.sd.mommyson.member.dto.MemberDTO">
		<id property="memCode" column="MEM_CODE"/>
		<result property="email" column="EMAIL"/>
		<result property="memPwd" column="MEM_PWD"/>
		<result property="address" column="ADDRESS"/>
		<result property="postCode" column="POST_CODE"/>
		<result property="dAddress" column="D_ADDRESS"/>
		<result property="phone" column="PHONE"/>
		<result property="memType" column="MEM_TYPE"/>
		<result property="locationCode" column="LOCATION_CODE"/>
		<result property="nickname" column="NICKNAME"/>
		<result property="memId" column="MEM_ID"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="isDeleted" column="IS_DELETED"/>
		<association property="ceo" resultMap="ceoResultMap"/>
		<association property="manager" resultMap="managerResultMap"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.member.dto.ManagerDTO" id="managerResultMap">
		<id property="memCode" column="MEM_CODE"/>
		<result property="lastLogin" column="LAST_LOGIN"/>
		<association property="authDTO" resultMap="authResultMap"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.member.dto.CeoDTO" id="ceoResultMap">
		<id property="memCode" column="MEM_CODE"/>
		<result property="account" column="ACCOUNT"/>
		<result property="no" column="STORE_NO"/>
		<result property="name" column="CEO_NAME"/>
		<association property="store" resultMap="storeResultMap"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.user.dto.OrderDTO" id="orderResultMap">
		<id property="memCode" column="MEM_CODE"/>
		<result property="totalPrice" column="TOTAL_PRICE"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.member.dto.StoreDTO" id="storeResultMap">
		<id property="memCode" column="MEM_CODE"/>
		<result property="storeName" column="STORE_NAME"/>
		<result property="storeImg" column="STORE_IMG"/>
		<result property="storeInfo" column="STORE_INFO"/>
		<result property="grade" column="GRADE"/>
		<result property="delCost" column="DEL_COST"/>
		<result property="workTime" column="WORK_TIME"/>
		<association property="membershipAndStore" resultMap="membershipAndStoreResultMap"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.owner.dto.MembershipDTO" id="membershipResultMap">
		<id property="msCode" column="MS_CODE"/>
		<result property="msType" column="MS_TYPE"/>
		<result property="msDate" column="MS_DATE"/>
		<result property="msPrice" column="MS_PRICE"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.owner.dto.MembershipAndStoreDTO" id="membershipAndStoreResultMap">
		<id property="memCode" column="MEM_CODE"/>
		<result property="msCode" column="MS_CODE"/>
		<result property="startDate" column="START_DATE"/>
		<result property="endDate" column="END_DATE"/>
		<association property="membership" resultMap="membershipResultMap"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.member.dto.AuthDTO" id="authResultMap">
		<id property="code" column="CODE"/>
		<result property="auth" column="AUTH"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.member.dto.UserDTO" id="userResultMap">
		<id property="memCode" column="MEM_CODE"/>
		<result property="name" column="NAME"/>
		<result property="repCount" column="REP_COUNT"/>
		<collection property="totalPrice" ofType="java.lang.Integer" javaType="list">
            <result column="TOTAL_PRICE"/>
        </collection>
		<collection property="review" resultMap="reviewResultMap"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.user.dto.ReviewDTO" id="reviewResultMap">
		<id property="memCode" column="MEM_CODE"/>
		<result property="orderCode" column="ORDER_CODE"/>
		<result property="img" column="RV_IMG"/>
		<result property="content" column="RV_CONTENT"/>
		<result property="grade" column="RV_GRADE"/>
		<result property="rvCode" column="RV_CODE"/>
		<result property="memId" column="MEM_ID"/>
		<collection property="report" resultMap="reportResultMap"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.user.dto.ReportDTO" id="reportResultMap">
		<id property="rvCode" column="RV_CODE"/>
		<result property="repTypeCode" column="REP_TYPE_CODE"/>
		<result property="repNo" column="REP_NO"/>
		<result property="repDate" column="REP_DATE"/>
		<result property="status" column="STATUS"/>
		<collection property="reportType" resultMap="reportTypeResultMap"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.user.dto.ReportTypeDTO" id="reportTypeResultMap">
		<id property="repTypeCode" column="REP_TYPE_CODE"/>
		<result property="repType" column="REP_TYPE"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.manager.dto.BannerDTO" id="bannerResultMap">
		<id property="bnCode" column="BANER_CODE"/>
		<result property="bnName" column="BANER_NAME"/>
		<result property="bnImg" column="BANER_IMG"/>
		<result property="bnStatus" column="STATUS"/>
		<result property="bnOrder" column="BANER_ORDER"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.owner.dto.TagDTO" id="tagResultMap">
		<id property="tagNo" column="TAG_NO"/>
		<result property="tagName" column="TAG"/>
		<result property="status" column="STATUS"/>
		<association property="hotKeyword" resultMap="hotResultMap"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.manager.dto.HotKeywordDTO" id="hotResultMap">
		<id property="tagNo" column="TAG_NO"/>
		<result property="hotContent" column="HOT_CONTENT"/>
		<result property="hotNo" column="HOT_NO"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.manager.dto.CategoryDTO" id="categoryResultMap">
		<id property="categoryCode" column="CATEGORY_CODE"/>
		<result property="categoryName" column="CATEGORY_NAME"/>
		<result property="status" column="STATUS"/>
	</resultMap>
	
	<select id="selectTotalPrice" resultMap="orderResultMap">
	    SELECT
	           TOTAL_PRICE
	      FROM ORDER_TBL
	     WHERE MEM_CODE = #{ memCode }
	</select>
	
	<select id="selectUserTotalCount" resultType="_int">
	    SELECT
   	  	       COUNT(*)
   	  	  FROM MEMBER_TBL A
   		<where>
   			A.MEM_TYPE = 'user'
   			<if test='searchValue != null'>
	   			AND (A.MEM_CODE LIKE '%' ||  #{ searchValue } || '%' OR
	   	  	 	A.EMAIL LIKE '%' ||  #{ searchValue } || '%' OR
	   	  	 	A.MEM_ID LIKE '%' ||  #{ searchValue } || '%' OR
		   	  	A.NICKNAME LIKE '%' ||  #{ searchValue } || '%')
	   	  	</if>
   		</where>
	</select>
	
	<select id="selectNormalMemberTotalCount" resultType="_int">
	    SELECT
   	  	       COUNT(*)
   	  	  FROM MEMBER_TBL A
   	  	  LEFT JOIN CEO_TBL B ON (A.MEM_CODE = B.MEM_CODE)
   	  	  LEFT JOIN STORE_TBL C ON (B.MEM_CODE = C.MEM_CODE)
   	  	 <where>
	   	  	<if test='searchValue != null and memberTypeCeo'>
	   	  		A.MEM_TYPE = 'ceo' AND
	   	  		(A.MEM_CODE LIKE '%' ||  #{ searchValue } || '%' OR
	   	  		A.EMAIL LIKE '%' ||  #{ searchValue } || '%' OR
	   	  		A.MEM_ID LIKE '%' ||  #{ searchValue } || '%' OR
	   	  		B.CEO_NAME LIKE '%' ||  #{ searchValue } || '%' OR
	   	  		C.STORE_NAME LIKE '%' ||  #{ searchValue } || '%') AND
	   	  	</if>
	   	  	<if test='searchValue != null and blackMember'>
	   	  		(A.MEM_CODE LIKE '%' ||  #{ searchValue } || '%' OR
   	  	 		A.EMAIL LIKE '%' ||  #{ searchValue } || '%' OR
   	  	 		A.MEM_ID LIKE '%' ||  #{ searchValue } || '%' OR
	   	  		A.NICKNAME LIKE '%' ||  #{ searchValue } || '%') AND
	   	  	</if>
	   	  	<if test="memberTypeUser">
		      	A.MEM_TYPE = 'user' AND
		      	A.IS_DELETED = 'N'
		    </if>
		    <if test="memberTypeCeo">
		    	A.MEM_TYPE = 'ceo'
		    </if>
		    <if test="blackMember">
		    	A.IS_DELETED = 'B'
		    </if>
   	  	 </where>
	</select>
	
	<select id="selectUser" resultMap="memberResultMap">
		SELECT
		        C.MEM_CODE
			  , C.EMAIL
			  , C.ADDRESS
			  , C.D_ADDRESS
			  , C.PHONE
			  , C.MEM_TYPE
			  , C.LOCATION_CODE
			  , C.NICKNAME
			  , C.MEM_ID
			  , C.ENROLL_DATE
			  , C.IS_DELETED
			  , C.REP_COUNT
			  , C.TOTAL_PRICE
			  <!-- , C.RV_CODE -->
		   FROM (SELECT 
		                ROWNUM RNUM
					  , B.MEM_CODE
					  , B.EMAIL
					  , B.ADDRESS
					  , B.D_ADDRESS
					  , B.PHONE
					  , B.MEM_TYPE
					  , B.LOCATION_CODE
					  , B.NICKNAME
					  , B.MEM_ID
					  , B.ENROLL_DATE
					  , B.IS_DELETED
					  , B.REP_COUNT
					  , B.TOTAL_PRICE
					  <!-- , B.RV_CODE -->
				   FROM (SELECT 
							   A.MEM_CODE
							 , A.EMAIL
							 , A.ADDRESS
							 , A.D_ADDRESS
							 , A.PHONE
							 , A.MEM_TYPE
							 , A.LOCATION_CODE
							 , A.NICKNAME
							 , A.MEM_ID
							 , A.ENROLL_DATE
							 , A.IS_DELETED
							 , U.REP_COUNT
							 , OD.TOTAL_PRICE
							 <!-- , R.RV_CODE -->
						  FROM MEMBER_TBL A 
						  JOIN USER_TBL U ON (A.MEM_CODE = U.MEM_CODE)
						  LEFT JOIN ORDER_TBL OD ON (U.MEM_CODE = OD.MEM_CODE)
						  <!-- LEFT JOIN REVIEW_TBL R ON (U.MEM_CODE = R.MEM_CODE) -->
						  <where>
						  	A.IS_DELETED = 'N' AND
						  	A.MEM_TYPE = 'user'
						  	<if test='searchValue != null'>
					   	  		AND (A.MEM_CODE LIKE '%' ||  #{ searchValue } || '%' OR
				   	  	 		A.EMAIL LIKE '%' ||  #{ searchValue } || '%' OR
				   	  	 		A.MEM_ID LIKE '%' ||  #{ searchValue } || '%' OR
					   	  		A.NICKNAME LIKE '%' ||  #{ searchValue } || '%')
					   	  	</if>
						  </where>
						 ORDER BY A.MEM_CODE DESC)B
				 <![CDATA[        
		          WHERE ROWNUM <= #{ endRow }
		          ]]>)C
	      <![CDATA[
		  WHERE C.RNUM >= #{ startRow } 
	       ]]>
	</select>
	
	<select id="selectMember" resultMap="memberResultMap2">
		SELECT
		        C.MEM_CODE
			  , C.EMAIL
			  , C.ADDRESS
			  , C.D_ADDRESS
			  , C.PHONE
			  , C.MEM_TYPE
			  , C.LOCATION_CODE
			  , C.NICKNAME
			  , C.MEM_ID
			  , C.ENROLL_DATE
			  , C.IS_DELETED
			  , C.REP_COUNT
			  , C.ACCOUNT
			  , C.STORE_NO
			  , C.CEO_NAME
			  , C.STORE_NAME
			  , C.RV_CODE
			  , C.MS_TYPE
		   FROM (SELECT 
		                ROWNUM RNUM
					  , B.MEM_CODE
					  , B.EMAIL
					  , B.ADDRESS
					  , B.D_ADDRESS
					  , B.PHONE
					  , B.MEM_TYPE
					  , B.LOCATION_CODE
					  , B.NICKNAME
					  , B.MEM_ID
					  , B.ENROLL_DATE
					  , B.IS_DELETED
					  , B.REP_COUNT
					  , B.ACCOUNT
					  , B.STORE_NO
					  , B.CEO_NAME
					  , B.STORE_NAME
					  , B.RV_CODE
					  , B.MS_TYPE
				   FROM (SELECT 
							   A.MEM_CODE
							 , A.EMAIL
							 , A.ADDRESS
							 , A.D_ADDRESS
							 , A.PHONE
							 , A.MEM_TYPE
							 , A.LOCATION_CODE
							 , A.NICKNAME
							 , A.MEM_ID
							 , A.ENROLL_DATE
							 , A.IS_DELETED
							 , U.REP_COUNT
						     , F.ACCOUNT
							 , F.STORE_NO
							 , F.CEO_NAME
							 , D.STORE_NAME
							 , R.RV_CODE
							 , MB.MS_TYPE
						  FROM MEMBER_TBL A 
						  LEFT JOIN USER_TBL U ON (A.MEM_CODE = U.MEM_CODE)
						  LEFT JOIN CEO_TBL F ON (A.MEM_CODE = F.MEM_CODE)
						  LEFT JOIN STORE_TBL D ON (A.MEM_CODE = D.MEM_CODE)
						  LEFT JOIN MS_STORE_TBL MS ON (D.MEM_CODE = MS.MEM_CODE)
						  LEFT JOIN MEMBERSHIP_TBL MB ON (MS.MS_CODE = MB.MS_CODE)
						  LEFT JOIN REVIEW_TBL R ON (U.MEM_CODE = R.MEM_CODE)
						  LEFT JOIN REPORT_TBL P ON (R.RV_CODE = P.RV_CODE)
						  <where>
					   	  	<if test='searchValue != null and searchCondition == "ceo"'>
					   	  		A.MEM_TYPE = 'ceo' AND
					   	  		(A.MEM_CODE LIKE '%' ||  #{ searchValue } || '%' OR
					   	  		A.EMAIL LIKE '%' ||  #{ searchValue } || '%' OR
					   	  		A.MEM_ID LIKE '%' ||  #{ searchValue } || '%' OR
					   	  		F.CEO_NAME LIKE '%' ||  #{ searchValue } || '%' OR
					   	  		D.STORE_NAME LIKE '%' ||  #{ searchValue } || '%') AND
					   	  	</if>
					   	  	<if test='searchValue != null and searchCondition == "black"'>
					   	  		(A.MEM_CODE LIKE '%' ||  #{ searchValue } || '%' OR
				   	  	 		A.EMAIL LIKE '%' ||  #{ searchValue } || '%' OR
				   	  	 		A.MEM_ID LIKE '%' ||  #{ searchValue } || '%' OR
					   	  		A.NICKNAME LIKE '%' ||  #{ searchValue } || '%') AND
					   	  	</if>
						  	<if test='searchCondition == "ceo"'>
						  		A.IS_DELETED = 'N' AND
						  		A.MEM_TYPE = 'ceo' 
						  	</if>
						  	<if test='searchCondition == "black"'>
						  		A.IS_DELETED = 'B' AND
						  		A.MEM_TYPE = 'user'
						  		AND
						  		R.RV_CODE IN
						  		(
						  		SELECT
						  		       RV_CODE
						  		  FROM REPORT_TBL
						  		)
						  	</if>
						  </where>
						 ORDER BY A.MEM_CODE DESC)B
				 <![CDATA[        
		          WHERE ROWNUM <= #{ endRow }
		          ]]>)C
	      <![CDATA[
		  WHERE C.RNUM >= #{ startRow } 
	       ]]>
	</select>

	<resultMap type="com.sd.mommyson.member.dto.LocationDTO" id="locationResultMap" extends="memberResultMap">
		<id property="locationCode" column="LOCATION_CODE"/>
		<result property="locationName" column="LOCATION_NAME"/>
	</resultMap>
	
	<select id="blackMemberSelect" resultMap="memberResultMap">
	    SELECT 
			   A.MEM_CODE
			 , A.EMAIL
			 , A.ADDRESS
			 , A.POST_CODE
			 , A.D_ADDRESS
			 , A.PHONE
			 , A.MEM_TYPE
			 , A.LOCATION_CODE
			 , A.NICKNAME
			 , A.MEM_ID
			 , A.ENROLL_DATE
			 , A.IS_DELETED
		  FROM MEMBER_TBL A
		  LEFT JOIN USER_TBL B ON (A.MEM_CODE = B.MEM_CODE)
		  LEFT JOIN CEO_TBL C ON (A.MEM_CODE = C.MEM_CODE)
		  LEFT JOIN STORE_TBL D ON (A.MEM_CODE = D.MEM_CODE)
		 WHERE A.IS_DELETED = 'B'
	</select>
	
	<select id="selectblackMemDetail" resultType="hashmap" parameterType="hashmap">
	    SELECT
	           A.RV_CODE
	         , A.RV_CONTENT
	         , B.REP_DATE
	         , C.REP_TYPE
	      FROM REVIEW_TBL A
	      JOIN REPORT_TBL B ON (A.RV_CODE = B.REP_NO)
	      JOIN REPORT_TYPE_TBL C ON (B.REP_TYPE_CODE = C.REP_TYPE_CODE)
	     WHERE A.MEM_CODE = #{ memCode }
	       AND A.IS_DELETED = 'Y'
	       AND B.STATUS != 'B'
	</select>
	
	<update id="deleteMembers" parameterType="list">
	    UPDATE
	           MEMBER_TBL A
	       SET A.IS_DELETED = 'Y'
	     <where>
	     	A.MEM_CODE IN
	     	<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
	     		#{ item }
	     	</foreach>
	     </where>
	</update>
	
	<update id="memberAddBlack" parameterType="list">
		UPDATE
		       MEMBER_TBL A
		   SET A.IS_DELETED = 'B'
		 <where>
	     	A.MEM_CODE IN
	     	<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
	     		#{ item }
	     	</foreach>
	   	 </where>
	</update>
	
	<update id="updateTerminateBlack" parameterType="hashmap">
		UPDATE
		       MEMBER_TBL A
		   SET A.IS_DELETED = 'N'
		 <where>
	     	A.MEM_CODE IN
	     	<foreach collection="terminateBlackList" item="item" index="index" separator="," open="(" close=")">
	     		#{ item }
	     	</foreach>
	   	 </where>
	</update>
	
	<update id="updateBlackCountReset" parameterType="hashmap">
		UPDATE
		       USER_TBL A
		   SET A.REP_COUNT = 0
		<where>
	     	A.MEM_CODE IN
     		<foreach collection="terminateBlackList" item="item" index="index" separator="," open="(" close=")">
	     		#{ item }
	     	</foreach>
 	 	</where>
	</update>
	
	<update id="updateRealReview" parameterType="hashmap">
	    UPDATE
	           REPORT_TBL A
	       SET A.STATUS = 'B'
    	<where>
	     	A.RV_CODE IN
	     	<foreach collection="terminateRvCodeList" item="item" index="index" separator="," open="(" close=")">
	     		#{ item }
	     	</foreach>
 		</where> 
	</update>
	
	<select id="selectCeoDetailInfo" resultMap="memberResultMap2" resultType="hashmap">
	    SELECT
	           A.MEM_CODE
			 , A.EMAIL
			 , A.ADDRESS
			 , A.POST_CODE
			 , A.D_ADDRESS
			 , A.PHONE
			 , A.LOCATION_CODE
			 , A.NICKNAME
			 , A.MEM_ID
			 , A.ENROLL_DATE
			 , A.IS_DELETED
			 , B.ACCOUNT
			 , B.STORE_NO
			 , B.CEO_NAME
			 , C.STORE_NAME
			 , D.START_DATE
			 , D.END_DATE
			 , D.PAY_DATE
			 , E.MS_CODE
			 , E.MS_TYPE
			 , E.MS_DATE
			 , E.MS_PRICE
		  FROM MEMBER_TBL A
		  LEFT JOIN CEO_TBL B ON (A.MEM_CODE = B.MEM_CODE)
		  LEFT JOIN STORE_TBL C ON (A.MEM_CODE = C.MEM_CODE)
		  LEFT JOIN MS_STORE_TBL D ON (C.MEM_CODE = D.MEM_CODE)
		  LEFT JOIN MEMBERSHIP_TBL E ON (D.MS_CODE = E.MS_CODE)
		 WHERE A.MEM_CODE = #{ ceoNum }
		   AND A.MEM_TYPE = 'ceo'
	</select>
	
	<select id="selectReportTotalCount" resultType="_int">
	    SELECT
	           COUNT(*)
	      FROM REPORT_TBL A
	      LEFT JOIN REVIEW_TBL B ON (A.RV_CODE = B.RV_CODE)
	     <where>
	     	<if test="all">
	     		A.STATUS IN('W','Y','N')
	     	</if>
	     	<if test="searchValue != null and all">
	     		AND (B.RV_CONTENT LIKE '%' || #{ searchValue } || '%' OR
	     		B.MEM_ID LIKE '%' || #{ searchValue } || '%')
	     	</if>
	     	<if test="condition1">
	     		A.STATUS = 'W'
	     	</if>
	     	<if test="searchValue != null and condition1">
	     		AND (B.RV_CONTENT LIKE '%' || #{ searchValue } || '%' OR
	     		B.MEM_ID LIKE '%' || #{ searchValue } || '%')
	     	</if>
	     	<if test="condition2">
	     		(A.STATUS = 'Y' OR
	     		A.STATUS = 'N')
	     	</if>
	     	<if test="searchValue != null and condition2">
	     		AND (B.RV_CONTENT LIKE '%' || #{ searchValue } || '%' OR
	     		B.MEM_ID LIKE '%' || #{ searchValue } || '%')
	     	</if>
	     	
	     </where>
	</select>
	
	<select id="selectReportList" resultType="hashmap" parameterType="hashmap">
	    SELECT
	           F.RV_CODE
	         , F.REP_TYPE_CODE
	         , F.REP_NO
	         , F.REP_DATE
	         , F.STATUS
	         , F.MEM_CODE
	         , F.RV_CONTENT
	         , F.MEM_ID
	         , F.REP_TYPE
	         , F.REP_COUNT
	      FROM (SELECT
	                   ROWNUM RNUM
	                 , E.RV_CODE
	                 , E.REP_TYPE_CODE
	                 , E.REP_NO
	                 , E.REP_DATE
	                 , E.STATUS
	                 , E.MEM_CODE
	                 , E.RV_CONTENT
	                 , E.MEM_ID
				     , E.REP_TYPE	    
	                 , E.REP_COUNT
			      FROM (SELECT
					           A.RV_CODE
					         , A.REP_TYPE_CODE
					         , A.REP_NO
					         , A.REP_DATE
					         , A.STATUS
					         , B.MEM_CODE
					         , B.RV_CONTENT
					         , B.MEM_ID
					         , C.REP_TYPE
					         , D.REP_COUNT
					      FROM REPORT_TBL A
					      LEFT JOIN REVIEW_TBL B ON (A.RV_CODE = B.RV_CODE)
					      LEFT JOIN REPORT_TYPE_TBL C ON (A.REP_TYPE_CODE = C.REP_TYPE_CODE)
					      LEFT JOIN USER_TBL D ON (B.MEM_CODE = D.MEM_CODE)
					     <where>
					     	<if test='searchCondition == "all"'>
					     		A.STATUS IN('W','Y','N') 
					     	</if>
					     	<if test='searchValue != null and searchCondition == "all"'>
					     		AND (B.RV_CONTENT LIKE '%' || #{ searchValue } || '%' OR
					     		B.MEM_ID LIKE '%' || #{ searchValue } || '%')
					     	</if>
					     	<if test='searchCondition == "W"'>
					     		A.STATUS = 'W'
					     	</if>
					     	<if test='searchValue != null and searchCondition == "W"'>
					     		AND (B.RV_CONTENT LIKE '%' || #{ searchValue } || '%' OR
					     		B.MEM_ID LIKE '%' || #{ searchValue } || '%')
					     	</if>
					     	<if test='searchCondition == "YN"'>
					     		(A.STATUS = 'Y' OR
					     		A.STATUS = 'N')
					     	</if>
					     	<if test='searchValue != null and searchCondition == "YN"'>
					     		AND (B.RV_CONTENT LIKE '%' || #{ searchValue } || '%' OR
					     		B.MEM_ID LIKE '%' || #{ searchValue } || '%')
					     	</if>
					     </where>
					     ORDER BY A.REP_NO ASC)E
			     <![CDATA[        
		           WHERE ROWNUM <= #{ endRow }
		          ]]>)F
		  <![CDATA[
		   WHERE F.RNUM >= #{ startRow } 
	      ]]>
	</select>
	
	<select id="selectRepDetailView" resultType="hashmap">
		SELECT
	           A.RV_CODE
	         , A.REP_TYPE_CODE
	         , A.REP_NO
	         , A.REP_DATE
	         , A.STATUS
	         , B.MEM_CODE
	         , B.RV_CONTENT
	         , B.MEM_ID
	         , C.REP_TYPE
	         , D.REP_COUNT
	      FROM REPORT_TBL A
	      LEFT JOIN REVIEW_TBL B ON (A.RV_CODE = B.RV_CODE)
	      LEFT JOIN REPORT_TYPE_TBL C ON (A.REP_TYPE_CODE = C.REP_TYPE_CODE)
	      LEFT JOIN USER_TBL D ON (B.MEM_CODE = D.MEM_CODE)
	     WHERE A.REP_NO = #{ repNo }
	     ORDER BY A.REP_NO ASC
	</select>
	
	<update id="updateRepCompanion" parameterType="hashmap">
	    UPDATE 
	           REPORT_TBL A
	       SET A.STATUS = 'N'
	     WHERE A.RV_CODE = #{ repRvCode }
	</update>
	
	<update id="updateWarning" parameterType="hashmap">
	    UPDATE
	           USER_TBL A
	       SET A.REP_COUNT = A.REP_COUNT + 1
	     WHERE A.MEM_CODE = #{ repMemCode }
	</update>
	
	<update id="updateWarning2" parameterType="hashmap">
	    UPDATE
	           REVIEW_TBL A
	       SET A.IS_DELETED = 'Y'
	     WHERE A.RV_CODE = #{ repRvCode }
	</update>
	
	<update id="updateWarning3" parameterType="hashmap">
	    UPDATE
	           REPORT_TBL A
	       SET A.STATUS = 'Y'
	     WHERE A.RV_CODE = #{ repRvCode }
	</update>
	
	<update id="updateBlack" parameterType="hashmap">
	    UPDATE
	           MEMBER_TBL A
	       SET A.IS_DELETED = 'B'
	     WHERE A.MEM_CODE = #{ repMemCode }
	</update>
	
	<update id="updateBlack2" parameterType="hashmap">
	    UPDATE
	           REVIEW_TBL A
	       SET A.IS_DELETED = 'Y'
	     WHERE A.RV_CODE = #{ repRvCode }
	</update>
	
	<update id="updateBlack3" parameterType="hashmap">
	    UPDATE
	           REPORT_TBL A
	       SET A.STATUS = 'Y'
	     WHERE A.RV_CODE = #{ repRvCode }
	</update>
	
	<!-- 배너조회 -->
	<select id="selectBanner" resultMap="bannerResultMap">
		SELECT
		       A.BANER_CODE
		     , A.BANER_NAME
		     , A.STATUS
		     , A.BANER_ORDER
		 FROM BANER_TBL A
		ORDER BY A.BANER_ORDER ASC
	</select>
	
	<!-- 배너수정 페이지 조회 -->
	<select id="selectBannerEditView" resultMap="bannerResultMap">
	    SELECT
		       A.BANER_CODE
		     , A.BANER_NAME
		     , A.BANER_IMG
		     , A.STATUS
		     , A.BANER_ORDER
		 FROM BANER_TBL A
		WHERE A.BANER_CODE = #{ bnCode }
	</select>
	
	<!-- 배너추가 -->
	<insert id="insertBannerAdd" parameterType="hashmap">
	    INSERT
	      INTO BANER_TBL
	    (
	      BANER_CODE
	    , BANER_NAME
	    , BANER_IMG
	    , STATUS
	    , BANER_ORDER
	    )
	    VALUES
	    (
	      SEQ_BANNER.NEXTVAL
	    , #{ banner.bnName }
	    , #{ bnImg }
	    , #{ banner.bnStatus }
	    , #{ banner.bnOrder }
	    )
	</insert>
	
	<!-- 배너수정 -->
	<update id="updateBanner" parameterType="hashmap">
	    UPDATE
	           BANER_TBL
	       SET BANER_NAME = #{ banner.bnName }
	       <if test="bnImg != null">
             , BANER_IMG = #{ bnImg }
           </if>
             , STATUS = #{ banner.bnStatus }
             , BANER_ORDER = #{ banner.bnOrder }
    	<where>
    		BANER_CODE = #{ banner.bnCode }
    	</where>
	</update>
	
	<!-- 배너삭제 -->
	<delete id="deleteBanner" parameterType="list">
	    DELETE
	      FROM BANER_TBL
	    <where>
	    	BANER_CODE IN
			<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
		     	#{ item }
		    </foreach>
	    </where>
	</delete>
	
	<!-- 사용태그조회 -->
	<select id="selectUseTag" resultMap="tagResultMap">
	    SELECT
	           A.TAG_NO
	         , A.TAG
	         , A.STATUS
	      FROM TAGS_TBL A
	</select>
	
	<!-- 태그 추가 -->
	<insert id="insertTagAdd">
	    INSERT
	      INTO TAGS_TBL
	    (
	      TAG_NO
	    , TAG
	    , STATUS
	    )
	    VALUES
	    (
	      SEQ_TAGS.NEXTVAL
	    , #{ tag }
	    , 'N'
	    )
	</insert>
	
	<!-- 태그 삭제 -->
	<delete id="deleteTag">
	    DELETE
	      FROM TAGS_TBL
	     WHERE TAG_NO = #{ tagNo }
	</delete>
	
	<!-- 사용 태그로 등록하기 -->
	<update id="updateUseTag" parameterType="list">
		 UPDATE
	           TAGS_TBL A
	       SET A.STATUS = 'Y'
    	<where>
	     	A.TAG_NO IN
	     	<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
	     		#{ item }
	     	</foreach>
 		</where>
	</update>
	
	<!-- 미사용 태그로 등록하기 -->
	<update id="updateUnUseTag" parameterType="list">
		UPDATE
	           TAGS_TBL A
	       SET A.STATUS = 'N'
    	<where>
	     	A.TAG_NO IN
	     	<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
	     		#{ item }
	     	</foreach>
 		</where>
	</update>
	
	<!-- 핫 키워드 조회 -->
	<select id="selectHotkeword" resultMap="hotResultMap">
	    SELECT
	           A.HOT_NO
	         , A.HOT_CONTENT
	         , A.TAG_NO
	      FROM HOT_TBL A
	     WHERE A.TAG_NO IS NOT NULL
	     ORDER BY A.HOT_NO ASC
	</select>
	
	<!-- 핫 키워드 추가 -->
	<update id="updateHotkewordAdd">
	    UPDATE
	           HOT_TBL A
	       SET A.HOT_CONTENT = #{ tagName }
	         , A.TAG_NO = #{ tagNo }
		<where>
			A.HOT_NO = 
			           (SELECT 
							   B.HOT_NO 
						  FROM
							   (SELECT 
							           HOT_NO 
							      FROM HOT_TBL 
							     WHERE TAG_NO IS NULL 
							     ORDER BY HOT_NO ASC) B
						 WHERE ROWNUM = 1)
		</where>
	</update>
	
	<!-- 핫 키워드 수정 -->
	<update id="updateHotkewordEdit">
	    UPDATE
	           HOT_TBL A
	       SET A.HOT_CONTENT = #{ tagName }
	         , A.TAG_NO = #{ tagNo }
		<where>
			A.HOT_NO IN #{ hotNo }
		</where>
	</update>
	
	<!-- 카테고리 조회 -->
	<select id="selectCategoryList" resultMap="categoryResultMap">
	    SELECT
	           A.CATEGORY_CODE
	         , A.CATEGORY_NAME
	         , A.STATUS
	      FROM CATEGORY_TBL A
	     ORDER BY CATEGORY_CODE ASC
	</select>
	
	<!-- 카테고리 추가 -->
	<insert id="insertCategory">
	    INSERT
	      INTO CATEGORY_TBL
	    (
	      CATEGORY_CODE
	    , CATEGORY_NAME
	    , STATUS
	    )
	    VALUES
	    (
	      SEQ_CATEGORY_CODE.NEXTVAL
	    , #{ category }
	    , 'N'
	    )
	</insert>
	
	<!-- 카테고리 삭제 -->
	<delete id="deleteCategory">
	    DELETE
	      FROM CATEGORY_TBL
	     WHERE CATEGORY_CODE = #{ categoryCode }
	</delete>
	
	<!-- 사용 카테고리로 등록 -->
	<update id="updateUseCategory" parameterType="list">
	    UPDATE
	           CATEGORY_TBL
	       SET STATUS = 'Y'
	    <where>
	    	CATEGORY_CODE IN
	    	<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
	    		#{ item }
	    	</foreach>
		</where>
	</update>
	
	<!-- 미사용 카테고리로 등록 -->
	<update id="updateUnUseCategory" parameterType="list">
	    UPDATE
	           CATEGORY_TBL
	       SET STATUS = 'N'
		<where>
			CATEGORY_CODE IN
			<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
	    		#{ item }
	    	</foreach>
		</where>
	</update>
	
	<select id="selectAuth" resultMap="authResultMap">
		SELECT
			   A.CODE
			 , A.AUTH
		  FROM AUTH_TBL A
		 WHERE A.CODE != 6
	</select>
	
	<update id="updateAuth" parameterType="hashmap">
		UPDATE MANAGER_TBL
		   SET CODE = #{ selected }
		 WHERE MEM_CODE = #{ memCode }
	</update>
	
	<insert id="insertNewManager" parameterType="hashmap">
		INSERT ALL
		INTO MEMBER_TBL VALUES(SEQ_MEMBER.nextval, NULL, #{ member.memPwd }, NULL, NULL, NULL, NULL, 'manager', 'L0', '관리자', #{ member.memId }, SYSDATE, 'N')
		INTO MANAGER_TBL VALUES(SEQ_MEMBER.currval, NULL, #{ code })
		SELECT * FROM DUAL
	</insert>
	
	<select id="selectManagerByMemCode" resultType="hashmap">
		SELECT
			   A.MEM_CODE
			 , A.MEM_ID
			 , B.CODE
		  FROM MEMBER_TBL A
		  JOIN MANAGER_TBL B ON(A.MEM_CODE = B.MEM_CODE)
		 WHERE A.MEM_CODE = #{ memCode }
	</select>
	
	<update id="deleteManager" parameterType="list">
		UPDATE MEMBER_TBL
		   SET IS_DELETED = 'Y'
		 WHERE MEM_CODE IN
		 <foreach collection="list" item="memCode" separator="," open="(" close=")">
		 	#{ memCode }
		 </foreach>
	</update>
   
   <resultMap id="PostResultMap" type="com.sd.mommyson.manager.dto.PostDTO" >
 	  <id property="postNo" column="POST_NO"/>
   	  <result property="boardCode" column="BOARD_CODE"/>
   	  <result property="postTitle" column="POST_TITLE"/>
   	  <result property="memCode" column="MEM_CODE"/>
   	  <result property="postContent" column="POST_CONTENT"/>
   	  <result property="postDate" column="POST_DATE"/>
   	  <result property="ansStatus" column="ANS_STATUS"/>
   	  <result property="queNo" column="QUE_NO"/>
   	  <result property="status" column="STATUS"/>
   	  <result property="viewCnt" column="VIEW_CNT"/>
   	  <result property="ansContent" column="ANS_CONTENT"/>
   	  <association property="member" resultMap="memberResultMap"/>
   </resultMap>

  
   <!-- 공지사항 게시글 수 조회 -->
   <select id="selectNoticeTotalCount" resultType="_int">
   	  SELECT
   	  	  COUNT(*)
   	  	 FROM POST_TBL A
   	  	<where>
   	  	  A.STATUS = 'N'
   	  	  <if test='searchValue != null'>
   	  	  AND A.POST_TITLE LIKE '%' ||  #{ searchValue } || '%'
   	  	  </if>
   	  	  <if test="searchCondition == 'all' || searchCondition == null || searchCondition == ''">
   	  	  AND A.BOARD_CODE IN('1','2','3','4','5')
   	  	  </if>
   	  	  <if test="searchCondition == 'notice'">
   	  	  AND A.BOARD_CODE = '1'
   	  	  </if>
   	  	  <if test="searchCondition == 'guide'">
   	  	  AND A.BOARD_CODE = '2'
   	  	  </if>
   	  	  <if test="searchCondition == 'check'">
   	  	  AND A.BOARD_CODE = '3'
   	  	  </if>
   	  	  <if test="searchCondition == 'event'">
   	  	  AND A.BOARD_CODE = '4'
   	  	  </if>
   	  	  <if test="searchCondition == 'owner'">
   	  	  AND A.BOARD_CODE = '5'
   	  	  </if>
   	  	</where>
   </select>
 
   <!-- 공지사항 리스트 조회  -->
   <select id="selectNoticeList" resultMap="PostResultMap">
	   SELECT
	    C.RNUM
	   ,C.POST_NO
	   ,C.BOARD_CODE
	   ,C.POST_TITLE
	   ,C.MEM_CODE
	   ,C.POST_CONTENT
	   ,C.POST_DATE
	   ,C.ANS_STATUS
	   ,C.QUE_NO
	   ,C.STATUS
	   ,C.VIEW_CNT
	   ,C.ANS_CONTENT
	   FROM (SELECT
	            ROWNUM RNUM
	           ,B.POST_NO
	           ,B.BOARD_CODE
	           ,B.POST_TITLE
	           ,B.MEM_CODE
	           ,B.POST_CONTENT
	           ,B.POST_DATE
	           ,B.ANS_STATUS
	           ,B.QUE_NO
	           ,B.STATUS
	           ,B.VIEW_CNT
	           ,B.ANS_CONTENT
	         FROM (SELECT
	                    A.POST_NO
	                   ,A.BOARD_CODE
	                   ,A.POST_TITLE
	                   ,A.MEM_CODE
	                   ,A.POST_CONTENT
	                   ,A.POST_DATE
	                   ,A.ANS_STATUS
	                   ,A.QUE_NO
	                   ,A.STATUS
	                   ,A.VIEW_CNT
	                   ,A.ANS_CONTENT
	                   FROM POST_TBL A
	                  <where>
	                  A.STATUS = 'N'
			   	  	  <if test='searchValue != null'>
			   	  	   AND A.POST_TITLE LIKE '%' ||  #{ searchValue } || '%'
			   	  	  </if>
			   	  	  <if test="searchCondition == 'all' || searchCondition == null || searchCondition == ''">
			   	  	   AND A.BOARD_CODE IN('1','2','3','4','5')
			   	  	  </if>
			   	  	  <if test="searchCondition == 'notice'">
			   	  	   AND A.BOARD_CODE = '1'
			   	  	  </if>
			   	  	  <if test="searchCondition == 'guide'">
			   	  	   AND A.BOARD_CODE = '2'
			   	  	  </if>
			   	  	  <if test="searchCondition == 'check'">
			   	  	   AND A.BOARD_CODE = '3'
			   	  	  </if>
			   	  	  <if test="searchCondition == 'event'">
			   	  	   AND A.BOARD_CODE = '4'
			   	  	  </if>
			   	  	  <if test="searchCondition == 'owner'">
			   	  	   AND A.BOARD_CODE = '5'
			   	  	  </if>
			   	  	  </where>
	                  ORDER BY A.POST_DATE DESC)B
	          <![CDATA[        
	          WHERE ROWNUM <= #{ endRow }
	          ]]>)C
	   <![CDATA[
	  WHERE C.RNUM >= #{ startRow } 
       ]]>
   </select>
   
   <!-- 공지사항/자주묻는질문 게시글 등록 -->
   <insert id="postWriting" parameterType="hashmap" >
 	INSERT ALL
 		INTO POST_TBL
 	VALUES
 	(SEQ_POST.nextval, #{ boardCode }, #{ postTitle }, 2, #{ postContent }, SYSDATE, 'N', NULL, 'N', 0, NULL)
 	SELECT * FROM DUAL
   </insert>

   <!-- 공지사항 게시글 조회 -->
   <select id="selectNotice" parameterType="_int" resultMap="PostResultMap">
     SELECT
	   	A.*
	   FROM POST_TBL A
	  WHERE A.POST_NO = #{ postNo }
   </select>
   
   <!-- 공지사항 조회수 -->
   <update id="selectNoticeCnt" parameterType="int">
   	UPDATE POST_TBL
   	   SET VIEW_CNT = VIEW_CNT + 1
   	 WHERE POST_NO = #{ postNo }
   </update>
   
   <!-- 공지사항 수정 -->
   <update id="noticeRevise" parameterType="hashmap">
    UPDATE POST_TBL
       SET POST_TITLE = #{ postTitle }
         , BOARD_CODE = #{ boardCode }
         , POST_CONTENT = #{ postContent }
	WHERE POST_NO = #{ postNo }
   </update>
   
   <!-- 공지사항/자주묻는질문 게시글 삭제(선택박스) -->
   <update id="deletePost" parameterType="list">
    UPDATE POST_TBL
       SET STATUS = 'D'
     WHERE POST_NO IN
           <foreach collection="list" item="postNo" separator="," open="(" close=")">
           		#{ postNo }
           </foreach>
   </update>
   
   <!-- 공지사항 삭제 -->
   <update id="deleteSelectNotice" parameterType="int">
   	UPDATE POST_TBL
       SET STATUS = 'P'
     WHERE POST_NO = #{ postNo }
   </update>
	
   <!-- 공지사항 게시글 상단 고정 up -->
   <update id="noticeUp" parameterType="int">
    UPDATE POST_TBL
      SET STATUS = 'U'
    WHERE POST_NO = #{ postNo }
   </update>
   
   <!-- 공지사랑 상단 고정 리스트 -->
   <select id="selectNoticeUpList" resultMap="PostResultMap">
  	 SELECT
          A.*
          FROM POST_TBL A
         WHERE A.STATUS = 'U'
           AND A.BOARD_CODE IN('1','2','3','4','5')
   </select> 
   
   <!-- 공지사항 게시글 상단 고정 해제 down -->
   <update id="noticeDown" parameterType="int">
    UPDATE POST_TBL
      SET STATUS = 'N'
    WHERE POST_NO = #{ postNo }
   </update> 
   
   <!-- 자주묻는질문 게시글 수 조회 -->
   <select id="OftenQuestionTotalCount" resultType="_int">
   	  SELECT
   	  	  COUNT(*)
   	  	 FROM POST_TBL A
   	  	<where>
   	  	  A.STATUS = 'N'
   	  	  <if test='searchValue != null'>
   	  	  AND A.POST_TITLE LIKE '%' ||  #{ searchValue } || '%'
   	  	  </if>
   	  	  <if test="searchCondition == null || searchCondition == ''">
   	  	  AND A.BOARD_CODE IN('6','7','8','9','10','11')
   	  	  </if>
   	  	  <if test="searchCondition == 'memberJoinQuestion'">
   	  	  AND A.BOARD_CODE = '6'
   	  	  </if>
		  <if test="searchCondition == 'billAndOrderQuestion'">
   	  	  AND A.BOARD_CODE = '7'
   	  	  </if>
   	  	  <if test="searchCondition == 'reviewManagementQuestion'">
   	  	  AND A.BOARD_CODE = '8'
   	  	  </if>
   	  	  <if test="searchCondition == 'userQuestion'">
   	  	  AND A.BOARD_CODE = '9'
   	  	  </if>
   	  	  <if test="searchCondition == 'inconvenienceQuestion'">
   	  	  AND A.BOARD_CODE = '10'
   	  	  </if>
   	  	  <if test="searchCondition == 'etcQuestion'">
   	  	  AND A.BOARD_CODE = '11'
   	  	  </if>
   	  	</where>
   </select>
   
   <!-- 자주묻는질문 리스트 조회 -->
   <select id="selectOftenQuestionList" resultMap="PostResultMap">
	   SELECT
	    C.RNUM
	   ,C.POST_NO
	   ,C.BOARD_CODE
	   ,C.POST_TITLE
	   ,C.MEM_CODE
	   ,C.POST_CONTENT
	   ,C.POST_DATE
	   ,C.ANS_STATUS
	   ,C.QUE_NO
	   ,C.STATUS
	   ,C.VIEW_CNT
	   ,C.ANS_CONTENT
	   FROM (SELECT
	            ROWNUM RNUM
	           ,B.POST_NO
	           ,B.BOARD_CODE
	           ,B.POST_TITLE
	           ,B.MEM_CODE
	           ,B.POST_CONTENT
	           ,B.POST_DATE
	           ,B.ANS_STATUS
	           ,B.QUE_NO
	           ,B.STATUS
	           ,B.VIEW_CNT
	           ,B.ANS_CONTENT
	         FROM (SELECT
	                    A.POST_NO
	                   ,A.BOARD_CODE
	                   ,A.POST_TITLE
	                   ,A.MEM_CODE
	                   ,A.POST_CONTENT
	                   ,A.POST_DATE
	                   ,A.ANS_STATUS
	                   ,A.QUE_NO
	                   ,A.STATUS
	                   ,A.VIEW_CNT
	                   ,A.ANS_CONTENT
	                   FROM POST_TBL A
	                  <where>
	                  A.STATUS = 'N'
			   	  	  <if test='searchValue != null'>
			   	  	   AND A.POST_TITLE LIKE '%' ||  #{ searchValue } || '%'
			   	  	  </if>
			   	  	  <if test="searchCondition == null || searchCondition == ''">
			   	  	   AND A.BOARD_CODE IN('6','7','8','9','10','11')
			   	  	  </if>
			   	  	  <if test="searchCondition == 'memberJoinQuestion'">
			   	  	   AND A.BOARD_CODE = '6'
			   	  	  </if>
					  <if test="searchCondition == 'billAndOrderQuestion'">
			   	  	   AND A.BOARD_CODE = '7'
			   	  	  </if>
			   	  	  <if test="searchCondition == 'reviewManagementQuestion'">
			   	  	   AND A.BOARD_CODE = '8'
			   	  	  </if>
			   	  	  <if test="searchCondition == 'userQuestion'">
			   	  	   AND A.BOARD_CODE = '9'
			   	  	  </if>
			   	  	  <if test="searchCondition == 'inconvenienceQuestion'">
			   	  	   AND A.BOARD_CODE = '10'
			   	  	  </if>
			   	  	  <if test="searchCondition == 'etcQuestion'">
			   	  	   AND A.BOARD_CODE = '11'
			   	  	  </if>
			   	  	  </where>
	                  ORDER BY A.POST_DATE DESC)B
	          <![CDATA[        
	          WHERE ROWNUM <= #{ endRow }
	          ]]>)C
	   <![CDATA[
	  WHERE C.RNUM >= #{ startRow } 
       ]]>
   </select>

   <!-- 사업자 - 1:1문의 갯수 -->
   <select id="businessInquiryTotalCount" resultType="int">
     SELECT
   	  	  COUNT(*)
   	   FROM POST_TBL A
   	   JOIN MEMBER_TBL B ON(A.MEM_CODE = B.MEM_CODE)
   	   <where>
   	    A.STATUS = 'N'
   	    <if test='searchValue != null'>
   	      AND A.POST_TITLE LIKE '%' ||  #{ searchValue } || '%'
   	    </if>
   	    <if test='searchCondition == "N"'>
   	      AND A.ANS_STATUS = 'W'
   	    </if>
   	    <if test='searchCondition == "Y"'>
   	      AND A.ANS_STATUS = 'Y'
   	    </if>
   	    <if test="searchCondition == null || searchCondition == ''">
   	      AND A.ANS_STATUS IN ('W','Y')
   	    </if>
   	    AND B.MEM_TYPE = 'ceo'
   	    AND A.BOARD_CODE IN('6','7','8','9','10','11')
   	   </where>
   </select>
   
   <!-- 사업자 - 1:1문의 리스트 -->
   <select id="selectBusinessInquiry" resultMap="PostResultMap">
   	SELECT
	    D.RNUM
       ,D.POST_NO
       ,D.BOARD_CODE
       ,D.POST_TITLE
       ,D.MEM_CODE
       ,D.POST_CONTENT
       ,D.POST_DATE
       ,D.ANS_STATUS
       ,D.QUE_NO
       ,D.STATUS
       ,D.VIEW_CNT
       ,D.ANS_CONTENT
       ,D.MEM_TYPE
       ,D.MEM_ID
	  FROM (SELECT
				ROWNUM RNUM
		       ,C.POST_NO
		       ,C.BOARD_CODE
		       ,C.POST_TITLE
		       ,C.MEM_CODE
		       ,C.POST_CONTENT
		       ,C.POST_DATE
		       ,C.ANS_STATUS
		       ,C.QUE_NO
		       ,C.STATUS
		       ,C.VIEW_CNT
		       ,C.ANS_CONTENT
		       ,C.MEM_TYPE 
		       ,C.MEM_ID
		       FROM (SELECT
				        A.POST_NO
				       ,A.BOARD_CODE
				       ,A.POST_TITLE
				       ,A.MEM_CODE
				       ,A.POST_CONTENT
				       ,A.POST_DATE
				       ,A.ANS_STATUS
				       ,A.QUE_NO
				       ,A.STATUS
				       ,A.VIEW_CNT
				       ,A.ANS_CONTENT
				       ,B.MEM_TYPE 
				       ,B.MEM_ID
				       FROM POST_TBL A
				       JOIN MEMBER_TBL B ON(A.MEM_CODE = B.MEM_CODE) 
				      <where>
				        A.STATUS = 'N'
				      <if test='searchValue != null'>
			   	        AND A.POST_TITLE LIKE '%' ||  #{ searchValue } || '%'
			   	      </if>
			   	      <if test='searchCondition == "N"'>
			   	        AND A.ANS_STATUS = 'W'
			   	      </if>
			   	      <if test='searchCondition == "Y"'>
			   	        AND A.ANS_STATUS = 'Y'
			   	      </if>
			   	      <if test='searchCondition == null || searchCondition == ""'>
			   	        AND A.ANS_STATUS IN('W','Y')
			   	      </if>
				        AND B.MEM_TYPE = 'ceo'
				        AND A.BOARD_CODE IN('6','7','8','9','10','11')
				      </where>
				      ORDER BY A.POST_DATE ASC)C
		      <![CDATA[        
	          WHERE ROWNUM <= #{ endRow }
	          ]]>
		      )D
	      <![CDATA[
		  WHERE D.RNUM >= #{ startRow } 
    	  ]]>
   </select>	

   <!-- 소비자 - 1:1문의 갯수 -->
   <select id="normalInquiryTotalCount" resultType="int">
     SELECT
   	  	  COUNT(*)
   	   FROM POST_TBL A
   	   JOIN MEMBER_TBL B ON(A.MEM_CODE = B.MEM_CODE)
   	   <where>
   	    A.STATUS = 'N'
   	    <if test='searchValue != null'>
   	      AND A.POST_TITLE LIKE '%' ||  #{ searchValue } || '%'
   	    </if>
   	    <if test='searchCondition == "N"'>
   	      AND A.ANS_STATUS = 'W'
   	    </if>
   	    <if test='searchCondition == "Y"'>
   	      AND A.ANS_STATUS = 'Y'
   	    </if>
   	    <if test="searchCondition == null || searchCondition == ''">
   	      AND A.ANS_STATUS IN ('W','Y')
   	    </if>
   	      AND B.MEM_TYPE = 'user'
   	      AND A.BOARD_CODE IN('6','7','8','9','10','11')
   	   </where>
   </select>

   <select id="selectNormalInquiry" resultMap="PostResultMap">
   	SELECT
	    D.RNUM
       ,D.POST_NO
       ,D.BOARD_CODE
       ,D.POST_TITLE
       ,D.MEM_CODE
       ,D.POST_CONTENT
       ,D.POST_DATE
       ,D.ANS_STATUS
       ,D.QUE_NO
       ,D.STATUS
       ,D.VIEW_CNT
       ,D.ANS_CONTENT
       ,D.MEM_TYPE
       ,D.MEM_ID
	  FROM (SELECT
				ROWNUM RNUM
		       ,C.POST_NO
		       ,C.BOARD_CODE
		       ,C.POST_TITLE
		       ,C.MEM_CODE
		       ,C.POST_CONTENT
		       ,C.POST_DATE
		       ,C.ANS_STATUS
		       ,C.QUE_NO
		       ,C.STATUS
		       ,C.VIEW_CNT
		       ,C.ANS_CONTENT
		       ,C.MEM_TYPE
		       ,C.MEM_ID 
		       FROM (SELECT
				        A.POST_NO
				       ,A.BOARD_CODE
				       ,A.POST_TITLE
				       ,A.MEM_CODE
				       ,A.POST_CONTENT
				       ,A.POST_DATE
				       ,A.ANS_STATUS
				       ,A.QUE_NO
				       ,A.STATUS
				       ,A.VIEW_CNT
				       ,A.ANS_CONTENT
				       ,B.MEM_TYPE 
				       ,B.MEM_ID
				       FROM POST_TBL A
				       JOIN MEMBER_TBL B ON(A.MEM_CODE = B.MEM_CODE)
				      <where>
				        A.STATUS = 'N'
				      <if test='searchValue != null'>
			   	        AND A.POST_TITLE LIKE '%' ||  #{ searchValue } || '%'
			   	      </if>
			   	      <if test='searchCondition == "N"'>
			   	        AND A.ANS_STATUS = 'W'
			   	      </if>
			   	      <if test='searchCondition == "Y"'>
			   	        AND A.ANS_STATUS = 'Y'
			   	      </if>
			   	      <if test='searchCondition == null || searchCondition == ""'>
			   	        AND A.ANS_STATUS IN('W','Y')
			   	      </if>
				        AND B.MEM_TYPE = 'user'
				        AND A.BOARD_CODE IN('6','7','8','9','10','11')
				      </where>
				      ORDER BY A.POST_DATE ASC)C
		      <![CDATA[        
	          WHERE ROWNUM <= #{ endRow }
	          ]]>
		      )D
	      <![CDATA[
		  WHERE D.RNUM >= #{ startRow } 
    	  ]]>
   </select>		
	
   <select id="idDupCheck" parameterType="string" resultType="int">
       SELECT 
       		  COUNT(*) 
       	 FROM MEMBER_TBL 
       	WHERE MEM_ID = #{ memId }
       	  AND IS_DELETED = 'N'
       	  AND MEM_TYPE = 'manager'
   </select>
</mapper>